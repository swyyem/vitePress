import{_ as e,c as t,o as r,aT as n}from"./chunks/framework.KoO-uqrk.js";const _=JSON.parse('{"title":"2025个人目标","description":"","frontmatter":{},"headers":[],"relativePath":"others/target/index.md","filePath":"others/target/index.md"}'),i={name:"others/target/index.md"};function o(h,a,s,l,c,u){return r(),t("div",null,a[0]||(a[0]=[n('<h1 id="_2025个人目标" tabindex="-1">2025个人目标 <a class="header-anchor" href="#_2025个人目标" aria-label="Permalink to &quot;2025个人目标&quot;">​</a></h1><h2 id="cicd" tabindex="-1">CICD <a class="header-anchor" href="#cicd" aria-label="Permalink to &quot;CICD&quot;">​</a></h2><h3 id="_1-购买linux服务器-并进行对应初始化" tabindex="-1">1.购买linux服务器，并进行对应初始化 <a class="header-anchor" href="#_1-购买linux服务器-并进行对应初始化" aria-label="Permalink to &quot;1.购买linux服务器，并进行对应初始化&quot;">​</a></h3><h3 id="_2-手动部署前后端服务到linux服务器-通过ng做反向代理" tabindex="-1">2.手动部署前后端服务到linux服务器，通过ng做反向代理 <a class="header-anchor" href="#_2-手动部署前后端服务到linux服务器-通过ng做反向代理" aria-label="Permalink to &quot;2.手动部署前后端服务到linux服务器，通过ng做反向代理&quot;">​</a></h3><h3 id="_3-通过docker将项目部署容器化" tabindex="-1">3.通过Docker将项目部署容器化 <a class="header-anchor" href="#_3-通过docker将项目部署容器化" aria-label="Permalink to &quot;3.通过Docker将项目部署容器化&quot;">​</a></h3><h3 id="_4-在linux上安装jenkins-并且实现一键构建部署" tabindex="-1">4.在linux上安装jenkins，并且实现一键构建部署 <a class="header-anchor" href="#_4-在linux上安装jenkins-并且实现一键构建部署" aria-label="Permalink to &quot;4.在linux上安装jenkins，并且实现一键构建部署&quot;">​</a></h3><h3 id="_5-jenkins配合github的hooks实现push后自动化部署" tabindex="-1">5.jenkins配合github的hooks实现push后自动化部署 <a class="header-anchor" href="#_5-jenkins配合github的hooks实现push后自动化部署" aria-label="Permalink to &quot;5.jenkins配合github的hooks实现push后自动化部署&quot;">​</a></h3><h2 id="canvas及svg" tabindex="-1">Canvas及Svg <a class="header-anchor" href="#canvas及svg" aria-label="Permalink to &quot;Canvas及Svg&quot;">​</a></h2><h3 id="_1-复习canvas及svg基础知识" tabindex="-1">1.复习Canvas及Svg基础知识 <a class="header-anchor" href="#_1-复习canvas及svg基础知识" aria-label="Permalink to &quot;1.复习Canvas及Svg基础知识&quot;">​</a></h3><h3 id="_2-通过canvas从0实现手写签名-图片标注-大转盘等效果" tabindex="-1">2.通过Canvas从0实现手写签名，图片标注，大转盘等效果 <a class="header-anchor" href="#_2-通过canvas从0实现手写签名-图片标注-大转盘等效果" aria-label="Permalink to &quot;2.通过Canvas从0实现手写签名，图片标注，大转盘等效果&quot;">​</a></h3><h3 id="_3-结合antv-x6源码深度学习svg" tabindex="-1">3.结合antv-x6源码深度学习Svg <a class="header-anchor" href="#_3-结合antv-x6源码深度学习svg" aria-label="Permalink to &quot;3.结合antv-x6源码深度学习Svg&quot;">​</a></h3><h2 id="vue3源码" tabindex="-1">Vue3源码 <a class="header-anchor" href="#vue3源码" aria-label="Permalink to &quot;Vue3源码&quot;">​</a></h2><h3 id="_1-结合vue2源码来对比学习vue3源码" tabindex="-1">1.结合Vue2源码来对比学习Vue3源码 <a class="header-anchor" href="#_1-结合vue2源码来对比学习vue3源码" aria-label="Permalink to &quot;1.结合Vue2源码来对比学习Vue3源码&quot;">​</a></h3><h3 id="_2-手写一个简单的vue3" tabindex="-1">2.手写一个简单的vue3 <a class="header-anchor" href="#_2-手写一个简单的vue3" aria-label="Permalink to &quot;2.手写一个简单的vue3&quot;">​</a></h3><h2 id="react源码" tabindex="-1">React源码 <a class="header-anchor" href="#react源码" aria-label="Permalink to &quot;React源码&quot;">​</a></h2><h3 id="_1-学习react源码数据驱动视图原理" tabindex="-1">1.学习React源码数据驱动视图原理 <a class="header-anchor" href="#_1-学习react源码数据驱动视图原理" aria-label="Permalink to &quot;1.学习React源码数据驱动视图原理&quot;">​</a></h3><h3 id="_2-逐个学习react中各个hooks的源码" tabindex="-1">2.逐个学习React中各个hooks的源码 <a class="header-anchor" href="#_2-逐个学习react中各个hooks的源码" aria-label="Permalink to &quot;2.逐个学习React中各个hooks的源码&quot;">​</a></h3><h3 id="_3-学习react中fiber相关源码" tabindex="-1">3.学习React中fiber相关源码 <a class="header-anchor" href="#_3-学习react中fiber相关源码" aria-label="Permalink to &quot;3.学习React中fiber相关源码&quot;">​</a></h3>',18)]))}const b=e(i,[["render",o]]);export{_ as __pageData,b as default};
