import{_ as a,c as n,o as l,aT as e}from"./chunks/framework.KoO-uqrk.js";const p="/vitePress/assets/image.VB37ItyM.png",t="/vitePress/assets/image-1.CVlKuPCY.png",r="/vitePress/assets/image-2.BN1JFMta.png",h="/vitePress/assets/image-3.D8Pdh-bu.png",i="/vitePress/assets/image-4.XZ6NMvo7.png",y=JSON.parse('{"title":"Jenkins 入门指南：前端自动化部署实践","description":"","frontmatter":{},"headers":[],"relativePath":"others/maintain/jenkins/index.md","filePath":"others/maintain/jenkins/index.md"}'),k={name:"others/maintain/jenkins/index.md"};function d(o,s,c,g,u,b){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="jenkins-入门指南-前端自动化部署实践" tabindex="-1">Jenkins 入门指南：前端自动化部署实践 <a class="header-anchor" href="#jenkins-入门指南-前端自动化部署实践" aria-label="Permalink to &quot;Jenkins 入门指南：前端自动化部署实践&quot;">​</a></h1><h2 id="jenkins-简介" tabindex="-1">Jenkins 简介 <a class="header-anchor" href="#jenkins-简介" aria-label="Permalink to &quot;Jenkins 简介&quot;">​</a></h2><p>Jenkins 是一个开源的自动化服务器，是目前最流行的 CI/CD（持续集成/持续部署）工具之一。它可以自动化各种任务，包括构建、测试和部署软件项目。</p><h3 id="jenkins-的主要作用" tabindex="-1">Jenkins 的主要作用 <a class="header-anchor" href="#jenkins-的主要作用" aria-label="Permalink to &quot;Jenkins 的主要作用&quot;">​</a></h3><ol><li><p><strong>持续集成（CI）</strong></p><ul><li>自动拉取代码</li><li>自动执行构建</li><li>自动运行测试</li><li>生成构建报告</li></ul></li><li><p><strong>持续部署（CD）</strong></p><ul><li>自动部署到测试环境</li><li>自动部署到生产环境</li><li>版本控制和回滚</li><li>部署状态监控</li></ul></li></ol><h3 id="jenkins-的优势" tabindex="-1">Jenkins 的优势 <a class="header-anchor" href="#jenkins-的优势" aria-label="Permalink to &quot;Jenkins 的优势&quot;">​</a></h3><ol><li><p><strong>开源免费</strong></p><ul><li>社区活跃</li><li>插件丰富</li><li>免费使用</li></ul></li><li><p><strong>高度可定制</strong></p><ul><li>支持多种插件</li><li>可以自定义构建流程</li><li>灵活的配置选项</li></ul></li><li><p><strong>跨平台支持</strong></p><ul><li>支持多种操作系统</li><li>支持多种构建工具</li><li>支持多种版本控制系统</li></ul></li><li><p><strong>分布式构建能力</strong></p><ul><li>支持主从架构</li><li>可以横向扩展</li><li>提高构建效率</li></ul></li></ol><h2 id="前端项目的-jenkins-部署实践" tabindex="-1">前端项目的 Jenkins 部署实践 <a class="header-anchor" href="#前端项目的-jenkins-部署实践" aria-label="Permalink to &quot;前端项目的 Jenkins 部署实践&quot;">​</a></h2><h3 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h3><ol><li><p><strong>基础环境要求</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Node.js</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (建议 </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">v14+</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Git</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Jenkins</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Nginx（用于部署）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p><strong>Jenkins 安装</strong></p><ul><li>Windows 用户可以下载 <a href="https://www.jenkins.io/download/" target="_blank" rel="noreferrer">Jenkins.msi</a> 安装包 <ul><li>首先需要安装JDK17,或者JDK21不然无法安装Jenkins!</li><li>安装过程中需要配置下启动端口，然后一直下一步即可</li></ul></li><li>访问 <code>http://localhost:8080</code> 进行初始化配置</li><li><img src="`+p+'" alt="alt text"></li><li>安装推荐的插件包</li><li><img src="'+t+'" alt="alt text"></li><li>新手建议选择推荐即可</li></ul></li></ol><ul><li>创建管理员账号 <ul><li>按照表单自己填写账号密码即可</li></ul></li><li>初始化完成后页面如下 <ul><li><img src="'+r+'" alt="alt text"></li></ul></li></ul><h3 id="jenkins-配置步骤" tabindex="-1">Jenkins 配置步骤 <a class="header-anchor" href="#jenkins-配置步骤" aria-label="Permalink to &quot;Jenkins 配置步骤&quot;">​</a></h3><ol><li><p><strong>创建新任务</strong></p><ul><li>点击 &quot;Create a Job&quot; <img src="'+h+`" alt="alt text"></li><li>选择 &quot;Freestyle Project&quot;</li><li>输入项目名称</li></ul></li><li><p><strong>配置源码管理</strong></p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 选择 Git</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 填写仓库 URL</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 配置凭据（用户名密码或 SSH key）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 选择需要构建的分支（如 */master）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+i+`" alt="alt text"></p></li><li><p><strong>构建触发器设置</strong></p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 代码提交触发（Poll SCM）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 定时构建（如每天晚上）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Webhook 触发（需要配置 GitHub/GitLab webhook）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>GitHub Webhook 配置：</strong></p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1. 在 Jenkins 系统配置中：</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 进入 Jenkins 首页 -&gt; Manage Jenkins -&gt; System</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 找到 &quot;GitHub&quot; 部分</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 点击 &quot;Add GitHub Server&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 给服务器起个名字（如 github-server）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> API URL</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 默认为 https://api.github.com</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 凭据：点击 &quot;Add&quot; -&gt; &quot;Jenkins&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">     -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 类型选择 &quot;Secret text&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">     -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Secret：填入 GitHub 的 Personal Access Token（在 GitHub Settings -&gt; Developer settings -&gt; Personal access tokens 中生成）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">     -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ID：给凭据起个名字（如 github-token）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 点击 &quot;Test connection&quot; 验证配置</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 保存配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2. 在 GitHub 仓库设置中：</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 进入 Settings -&gt; Webhooks</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 点击 &quot;Add webhook&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Payload URL：填入 Jenkins 回调 URL</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Content type：选择 application/json</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 选择触发事件（通常选择 Push 事件）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 保存配置</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><strong>GitLab Webhook 配置：</strong></p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1. 在 Jenkins 系统配置中：</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 确保已安装 GitLab 插件</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 配置 GitLab Server</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 生成 API token</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 记录 Jenkins 的回调 URL：http://your-jenkins-url/project/your-project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2. 在 GitLab 仓库设置中：</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 进入 Settings -&gt; Webhooks</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> URL：填入 Jenkins 回调 URL</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Secret Token：填入 Jenkins 生成的 Token</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 选择触发事件（通常选择 Push events）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 保存配置</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>注意：确保 Jenkins 服务器可以被 GitHub/GitLab 访问到，如果是内网环境需要配置相应的网络访问策略。</p></blockquote></li><li><p><strong>构建环境配置</strong></p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 选择 Node.js 环境</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 配置 npm registry（如需要）</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 设置环境变量</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>构建步骤</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 构建项目</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 部署到服务器</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 可以使用 rsync 或其他部署方式</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rsync</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -avz</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --delete</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./dist/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/www/html/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ol><h3 id="jenkins-凭据配置指南" tabindex="-1">Jenkins 凭据配置指南 <a class="header-anchor" href="#jenkins-凭据配置指南" aria-label="Permalink to &quot;Jenkins 凭据配置指南&quot;">​</a></h3><p>Jenkins 凭据是用于存储敏感信息（如密码、API密钥、SSH密钥等）的安全方式。以下是配置凭据的详细步骤：</p><ol><li><p><strong>访问凭据配置</strong></p><ul><li>点击左侧菜单 &quot;Manage Jenkins&quot;</li><li>找到 &quot;Credentials&quot; 选项并点击</li><li>点击 &quot;(global)&quot; 域</li><li>点击左侧的 &quot;Add Credentials&quot;</li></ul></li><li><p><strong>凭据类型选择</strong> Jenkins 支持多种凭据类型：</p><ul><li><strong>Username with password</strong>: 用于用户名和密码认证</li><li><strong>SSH Username with private key</strong>: 用于SSH密钥认证</li><li><strong>Secret text</strong>: 用于API令牌等单一密钥</li><li><strong>Secret file</strong>: 用于需要完整文件的认证</li><li><strong>Certificate</strong>: 用于证书认证</li></ul></li><li><p><strong>配置用户名密码凭据</strong></p><ul><li>Kind: 选择 &quot;Username with password&quot;</li><li>Scope: 通常选择 &quot;Global&quot;</li><li>Username: 输入Git仓库用户名</li><li>Password: 输入密码或访问令牌</li><li>ID: 可选，用于在Jenkins中引用该凭据的唯一标识符</li><li>Description: 添加描述信息，方便识别用途</li></ul></li><li><p><strong>配置SSH密钥凭据</strong></p><ul><li>Kind: 选择 &quot;SSH Username with private key&quot;</li><li>Scope: 选择 &quot;Global&quot;</li><li>ID: 可选，设置唯一标识符</li><li>Username: 通常是 git</li><li>Private Key: 选择 &quot;Enter directly&quot; 并粘贴私钥内容</li><li>Passphrase: 如果私钥有密码，在此输入</li></ul></li><li><p><strong>在项目中使用凭据</strong></p><ul><li>在项目配置的 &quot;Source Code Management&quot; 部分</li><li>选择 Git 并输入仓库 URL</li><li>在 Credentials 下拉菜单中选择已配置的凭据</li><li><img src="`+i+`" alt="alt text"></li></ul></li><li><p><strong>安全建议</strong></p><ul><li>使用访问令牌替代密码</li><li>定期轮换凭据</li><li>给予最小必要权限</li><li>使用有意义的描述，方便管理</li><li>不同项目使用不同凭据，避免权限扩散</li></ul></li></ol><h3 id="完整的部署脚本示例" tabindex="-1">完整的部署脚本示例 <a class="header-anchor" href="#完整的部署脚本示例" aria-label="Permalink to &quot;完整的部署脚本示例&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行测试（如果有）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 构建项目</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 备份当前版本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/www/html/current</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/www/html/backup/</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">date</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> +%Y%m%d_%H%M%S</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 部署新版本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -rf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/www/html/current/</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">*</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./dist/</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">*</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/www/html/current/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 清理备份（保留最近5个版本）</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/www/html/backup/</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;&amp;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ls</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> tail</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> +6</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> xargs</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -rf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="常见问题与解决方案" tabindex="-1">常见问题与解决方案 <a class="header-anchor" href="#常见问题与解决方案" aria-label="Permalink to &quot;常见问题与解决方案&quot;">​</a></h3><ol><li><p><strong>构建失败</strong></p><ul><li>检查 Node.js 版本</li><li>检查依赖完整性</li><li>查看构建日志</li></ul></li><li><p><strong>部署失败</strong></p><ul><li>检查服务器权限</li><li>确认网络连接</li><li>验证部署路径</li></ul></li><li><p><strong>自动触发失败</strong></p><ul><li>检查 webhook 配置</li><li>确认 Jenkins 权限</li><li>验证触发器设置</li></ul></li></ol><h2 id="最佳实践建议" tabindex="-1">最佳实践建议 <a class="header-anchor" href="#最佳实践建议" aria-label="Permalink to &quot;最佳实践建议&quot;">​</a></h2><ol><li><p><strong>版本控制</strong></p><ul><li>使用语义化版本</li><li>保留部署历史</li><li>实现快速回滚</li></ul></li><li><p><strong>环境管理</strong></p><ul><li>区分开发/测试/生产环境</li><li>使用环境变量</li><li>做好配置隔离</li></ul></li><li><p><strong>监控告警</strong></p><ul><li>配置构建通知</li><li>设置部署通知</li><li>监控系统状态</li></ul></li></ol><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>Jenkins 为前端项目提供了强大的自动化部署能力，通过合理的配置和使用，可以显著提高开发团队的效率。本文介绍的配置和步骤可以作为入门参考，读者可以根据实际项目需求进行调整和优化。</p><h2 id="参考资源" tabindex="-1">参考资源 <a class="header-anchor" href="#参考资源" aria-label="Permalink to &quot;参考资源&quot;">​</a></h2><ul><li><a href="https://www.jenkins.io/doc/" target="_blank" rel="noreferrer">Jenkins 官方文档</a></li><li><a href="https://plugins.jenkins.io/" target="_blank" rel="noreferrer">Jenkins 插件中心</a></li><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js 官方文档</a></li></ul>`,26)]))}const A=a(k,[["render",d]]);export{y as __pageData,A as default};
