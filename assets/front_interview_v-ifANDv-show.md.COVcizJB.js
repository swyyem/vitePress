import{_ as i,c as a,o as e,aT as n}from"./chunks/framework.KoO-uqrk.js";const c=JSON.parse('{"title":"💡 Vue 面试题：v-if 与 v-show 的区别，以及是否有最新 API 替代","description":"","frontmatter":{},"headers":[],"relativePath":"front/interview/v-ifANDv-show.md","filePath":"front/interview/v-ifANDv-show.md"}'),t={name:"front/interview/v-ifANDv-show.md"};function l(h,s,p,r,k,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="💡-vue-面试题-v-if-与-v-show-的区别-以及是否有最新-api-替代" tabindex="-1">💡 Vue 面试题：v-if 与 v-show 的区别，以及是否有最新 API 替代 <a class="header-anchor" href="#💡-vue-面试题-v-if-与-v-show-的区别-以及是否有最新-api-替代" aria-label="Permalink to &quot;💡 Vue 面试题：v-if 与 v-show 的区别，以及是否有最新 API 替代&quot;">​</a></h1><hr><h2 id="🧩-一、核心区别一句话总结" tabindex="-1">🧩 一、核心区别一句话总结 <a class="header-anchor" href="#🧩-一、核心区别一句话总结" aria-label="Permalink to &quot;🧩 一、核心区别一句话总结&quot;">​</a></h2><blockquote><p><code>v-if</code> 是 <strong>条件渲染</strong>（控制元素是否存在于 DOM）。<br><code>v-show</code> 是 <strong>显示隐藏</strong>（通过 CSS 控制样式 <code>display</code>）。</p></blockquote><hr><h2 id="🧠-二、原理与本质区别" tabindex="-1">🧠 二、原理与本质区别 <a class="header-anchor" href="#🧠-二、原理与本质区别" aria-label="Permalink to &quot;🧠 二、原理与本质区别&quot;">​</a></h2><table tabindex="0"><thead><tr><th>对比项</th><th>v-if</th><th>v-show</th></tr></thead><tbody><tr><td><strong>本质</strong></td><td>控制组件/DOM 是否渲染</td><td>控制样式是否显示</td></tr><tr><td><strong>DOM 是否存在</strong></td><td>条件为 <code>false</code> 时，节点不在 DOM 中</td><td>节点始终存在于 DOM 中</td></tr><tr><td><strong>切换原理</strong></td><td>创建/销毁 DOM 节点</td><td>修改 <code>display: none</code></td></tr><tr><td><strong>性能开销</strong></td><td>高（频繁切换会频繁销毁重建）</td><td>低（仅修改样式）</td></tr><tr><td><strong>首次渲染性能</strong></td><td>若条件为 <code>false</code>，不渲染，节省初始开销</td><td>无论条件，都会渲染</td></tr><tr><td><strong>常见场景</strong></td><td>不常切换的模块，如登录状态、页面切换</td><td>频繁切换的元素，如弹窗、下拉菜单</td></tr></tbody></table><hr><h2 id="🧱-三、通俗示例讲解" tabindex="-1">🧱 三、通俗示例讲解 <a class="header-anchor" href="#🧱-三、通俗示例讲解" aria-label="Permalink to &quot;🧱 三、通俗示例讲解&quot;">​</a></h2><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!-- 使用 v-if --&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Dialog</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> v-if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">showDialog</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!-- 使用 v-show --&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Dialog</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> v-show</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">showDialog</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>区别说明：</strong></p><ul><li><code>v-if</code>: 当 <code>showDialog = false</code> 时，弹窗组件<strong>不会存在于 DOM</strong>，Vue 会将其销毁；</li><li><code>v-show</code>: 弹窗组件始终存在，只是通过 <code>display: none</code> 隐藏。</li></ul><p>📘 通俗比喻：</p><ul><li><code>v-if</code> 就像 “<strong>拆房子再重建</strong>”；</li><li><code>v-show</code> 就像 “<strong>拉窗帘再打开</strong>”。</li></ul><hr><h2 id="⚙️-四、性能与使用建议" tabindex="-1">⚙️ 四、性能与使用建议 <a class="header-anchor" href="#⚙️-四、性能与使用建议" aria-label="Permalink to &quot;⚙️ 四、性能与使用建议&quot;">​</a></h2><table tabindex="0"><thead><tr><th>使用场景</th><th>推荐指令</th><th>理由</th></tr></thead><tbody><tr><td>频繁切换显示</td><td>✅ <code>v-show</code></td><td>不会频繁创建/销毁 DOM，切换流畅</td></tr><tr><td>偶尔显示/隐藏</td><td>✅ <code>v-if</code></td><td>初始时可避免不必要渲染</td></tr><tr><td>过渡/动画效果</td><td>✅ <code>v-if</code> + <code>&lt;transition&gt;</code></td><td>更好控制进入/离开动画</td></tr><tr><td>大型组件</td><td>✅ <code>v-if</code></td><td>节省内存与渲染性能</td></tr></tbody></table><hr><h2 id="🪄-五、实际项目中的组合使用" tabindex="-1">🪄 五、实际项目中的组合使用 <a class="header-anchor" href="#🪄-五、实际项目中的组合使用" aria-label="Permalink to &quot;🪄 五、实际项目中的组合使用&quot;">​</a></h2><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> v-if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dataLoaded</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">UserPanel</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> v-show</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">showPanel</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">script</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> setup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> onMounted</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> dataLoaded</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> showPanel</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">onMounted</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">async</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  await</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Promise</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">r</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> setTimeout</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">r</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 500</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  dataLoaded</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">script</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>说明：</p><ul><li><code>v-if</code> 控制是否加载组件；</li><li><code>v-show</code> 控制组件的显示隐藏；</li><li>实现“先加载一次，再频繁切换”的效果。</li></ul><hr><h2 id="🧭-六、vue-3-中是否有新-api-替代" tabindex="-1">🧭 六、Vue 3 中是否有新 API 替代？ <a class="header-anchor" href="#🧭-六、vue-3-中是否有新-api-替代" aria-label="Permalink to &quot;🧭 六、Vue 3 中是否有新 API 替代？&quot;">​</a></h2><p>Vue 3 并未废弃 <code>v-if</code> / <code>v-show</code>，但提供了一些 <strong>更灵活的组合式 API</strong> 和 <strong>优化指令</strong>，可在特定场景下替代或增强它们的功能。</p><h3 id="_1️⃣-suspense-——-异步条件渲染-替代异步版-v-if" tabindex="-1">1️⃣ <code>&lt;Suspense&gt;</code> —— 异步条件渲染（替代异步版 v-if） <a class="header-anchor" href="#_1️⃣-suspense-——-异步条件渲染-替代异步版-v-if" aria-label="Permalink to &quot;1️⃣ \`&lt;Suspense&gt;\` —— 异步条件渲染（替代异步版 v-if）&quot;">​</a></h3><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Suspense</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &lt;template #default&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &lt;AsyncComponent /&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &lt;/template&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &lt;template #fallback&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &lt;LoadingSpinner /&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Suspense</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2️⃣-v-memo-——-缓存模板结果-vue-3-2" tabindex="-1">2️⃣ <code>v-memo</code> —— 缓存模板结果（Vue 3.2+） <a class="header-anchor" href="#_2️⃣-v-memo-——-缓存模板结果-vue-3-2" aria-label="Permalink to &quot;2️⃣ \`v-memo\` —— 缓存模板结果（Vue 3.2+）&quot;">​</a></h3><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> v-memo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">someDeps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &lt;ExpensiveComponent v-show=&quot;visible&quot; /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3️⃣-keep-alive-——-缓存组件状态-防止-v-if-销毁" tabindex="-1">3️⃣ <code>&lt;keep-alive&gt;</code> —— 缓存组件状态（防止 v-if 销毁） <a class="header-anchor" href="#_3️⃣-keep-alive-——-缓存组件状态-防止-v-if-销毁" aria-label="Permalink to &quot;3️⃣ \`&lt;keep-alive&gt;\` —— 缓存组件状态（防止 v-if 销毁）&quot;">​</a></h3><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">keep-alive</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &lt;MyDialog v-if=&quot;showDialog&quot; /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">keep-alive</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4️⃣-teleport-——-改善渲染层级-辅助-v-if-v-show" tabindex="-1">4️⃣ <code>&lt;teleport&gt;</code> —— 改善渲染层级（辅助 v-if / v-show） <a class="header-anchor" href="#_4️⃣-teleport-——-改善渲染层级-辅助-v-if-v-show" aria-label="Permalink to &quot;4️⃣ \`&lt;teleport&gt;\` —— 改善渲染层级（辅助 v-if / v-show）&quot;">​</a></h3><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">teleport</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> to</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">body</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  &lt;Modal v-if=&quot;showModal&quot; /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">teleport</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><h2 id="🧮-七、生命周期与渲染差异补充" tabindex="-1">🧮 七、生命周期与渲染差异补充 <a class="header-anchor" href="#🧮-七、生命周期与渲染差异补充" aria-label="Permalink to &quot;🧮 七、生命周期与渲染差异补充&quot;">​</a></h2><table tabindex="0"><thead><tr><th>生命周期 / 行为</th><th>v-if</th><th>v-show</th></tr></thead><tbody><tr><td>created / mounted</td><td>每次重新渲染会触发</td><td>仅首次渲染时触发</td></tr><tr><td>unmounted (销毁)</td><td>每次隐藏时会销毁</td><td>不会销毁</td></tr><tr><td>内存占用</td><td>隐藏时内存占用低</td><td>隐藏时仍占内存</td></tr></tbody></table><hr><h2 id="💬-八、面试答题模板" tabindex="-1">💬 八、面试答题模板 <a class="header-anchor" href="#💬-八、面试答题模板" aria-label="Permalink to &quot;💬 八、面试答题模板&quot;">​</a></h2><blockquote><p><code>v-if</code> 是真正的条件渲染，控制节点是否存在于 DOM；<br><code>v-show</code> 是通过 CSS 控制显隐，节点始终在 DOM 中。</p><p>如果显示切换频繁，用 <code>v-show</code>；<br> 如果条件变化少或首次不需要渲染，用 <code>v-if</code>。</p><p>Vue 3 没有新的指令替代它们，但提供了 <code>&lt;Suspense&gt;</code>（异步渲染）、<code>v-memo</code>（模板缓存）、<code>keep-alive</code>（组件缓存）等特性，能在特定场景下优化渲染性能。</p></blockquote><hr><h2 id="✅-九、总结一句话" tabindex="-1">✅ 九、总结一句话 <a class="header-anchor" href="#✅-九、总结一句话" aria-label="Permalink to &quot;✅ 九、总结一句话&quot;">​</a></h2><blockquote><p><strong>v-if 控制“是否存在”，v-show 控制“显不显”。</strong><br><strong>频繁切换用 v-show，不常切换用 v-if。</strong></p><p>Vue 3 提供了 <code>&lt;Suspense&gt;</code>、<code>v-memo</code>、<code>keep-alive</code> 等增强方案，可配合使用。</p></blockquote><hr><h2 id="📘-参考文档" tabindex="-1">📘 参考文档 <a class="header-anchor" href="#📘-参考文档" aria-label="Permalink to &quot;📘 参考文档&quot;">​</a></h2><ul><li><a href="https://cn.vuejs.org/guide/essentials/conditional.html" target="_blank" rel="noreferrer">Vue 条件渲染（中文）</a></li><li><a href="https://vuejs.org/guide/built-ins/suspense.html" target="_blank" rel="noreferrer">Vue Suspense</a></li><li><a href="https://vuejs.org/api/built-in-directives.html#v-memo" target="_blank" rel="noreferrer">v-memo 指令</a></li><li><a href="https://vuejs.org/guide/built-ins/keep-alive.html" target="_blank" rel="noreferrer">keep-alive</a></li><li><a href="https://vuejs.org/guide/built-ins/teleport.html" target="_blank" rel="noreferrer">teleport</a></li></ul>`,45)]))}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
