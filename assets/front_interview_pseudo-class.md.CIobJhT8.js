import{_ as e,c as t,o as l,aT as i}from"./chunks/framework.KoO-uqrk.js";const q=JSON.parse('{"title":"伪类和伪元素的区别","description":"","frontmatter":{},"headers":[],"relativePath":"front/interview/pseudo-class.md","filePath":"front/interview/pseudo-class.md"}'),o={name:"front/interview/pseudo-class.md"};function r(s,a,u,n,d,h){return l(),t("div",null,a[0]||(a[0]=[i('<h1 id="伪类和伪元素的区别" tabindex="-1">伪类和伪元素的区别 <a class="header-anchor" href="#伪类和伪元素的区别" aria-label="Permalink to &quot;伪类和伪元素的区别&quot;">​</a></h1><h2 id="伪类" tabindex="-1">伪类 <a class="header-anchor" href="#伪类" aria-label="Permalink to &quot;伪类&quot;">​</a></h2><ul><li>选择处于特定状态的元素（像给元素贴了个状态标签）</li><li>通俗理解： 就像给人贴标签：&quot;生病的人&quot;、&quot;睡觉的人&quot;、&quot;开心的人&quot;。选择的是整个元素，只是这个元素处于某种特殊状态</li></ul><h2 id="伪元素" tabindex="-1">伪元素 <a class="header-anchor" href="#伪元素" aria-label="Permalink to &quot;伪元素&quot;">​</a></h2><ul><li>通俗理解： 就像在元素内部划出一块区域：&quot;第一个字&quot;、&quot;第一行&quot;、&quot;前面插入的内容&quot;、&quot;后面插入的内容&quot;。选择的是元素的某个特定部分。</li><li>伪元素： 选择元素的某个特定部分（像在元素内部创建了一个虚拟的元素）</li></ul><h2 id="伪类和伪元素的区别-1" tabindex="-1">伪类和伪元素的区别 <a class="header-anchor" href="#伪类和伪元素的区别-1" aria-label="Permalink to &quot;伪类和伪元素的区别&quot;">​</a></h2><ul><li><p>CSS2时代：伪类和伪元素都用单冒号 :</p></li><li><p>CSS3规范：伪元素改用双冒号 :: 以便区分</p></li><li><p>实际开发： 为了兼容老浏览器，::before、::after等通常还是写成单冒号</p></li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li>伪类是选择处于特定状态的元素，比如:hover选择鼠标悬停的元素，:first-child选择第一个子元素。它选择的是整个元素。</li><li>伪元素是选择元素的某个特定部分，比如::before在元素内容前插入虚拟内容，::first-letter选择第一个字母。它选择的是元素的一部分。</li><li>从语法上说，CSS3规范建议伪元素用双冒号::，伪类用单冒号:，但实际开发中为了兼容性，伪元素通常还是写成单冒号。</li><li>我一般在需要根据状态改变样式时用伪类，在需要装饰性内容或选择元素特定部分时用伪元素。</li></ul>',9)]))}const f=e(o,[["render",r]]);export{q as __pageData,f as default};
