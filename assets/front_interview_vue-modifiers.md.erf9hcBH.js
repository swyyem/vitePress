import{_ as e,c as d,o as s,aT as i}from"./chunks/framework.KoO-uqrk.js";const k=JSON.parse('{"title":"📘 Vue 常用修饰符总结（通俗易懂 + 面试必背）","description":"","frontmatter":{},"headers":[],"relativePath":"front/interview/vue-modifiers.md","filePath":"front/interview/vue-modifiers.md"}'),a={name:"front/interview/vue-modifiers.md"};function o(l,t,n,r,h,c){return s(),d("div",null,t[0]||(t[0]=[i(`<h1 id="📘-vue-常用修饰符总结-通俗易懂-面试必背" tabindex="-1">📘 Vue 常用修饰符总结（通俗易懂 + 面试必背） <a class="header-anchor" href="#📘-vue-常用修饰符总结-通俗易懂-面试必背" aria-label="Permalink to &quot;📘 Vue 常用修饰符总结（通俗易懂 + 面试必背）&quot;">​</a></h1><hr><h2 id="一、什么是修饰符" tabindex="-1">一、什么是修饰符？ <a class="header-anchor" href="#一、什么是修饰符" aria-label="Permalink to &quot;一、什么是修饰符？&quot;">​</a></h2><blockquote><p>修饰符（modifier）是 Vue 提供的一种语法糖，作用是<strong>在指令后添加“点语法”来修改默认行为</strong>。<br> 比如：<code>v-on:click.stop</code>、<code>v-model.lazy</code>。</p></blockquote><hr><h2 id="二、事件修饰符-v-on" tabindex="-1">二、事件修饰符（v-on） <a class="header-anchor" href="#二、事件修饰符-v-on" aria-label="Permalink to &quot;二、事件修饰符（v-on）&quot;">​</a></h2><p>用于<strong>控制事件传播</strong>或<strong>改变默认行为</strong>。</p><table tabindex="0"><thead><tr><th>修饰符</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td><code>.stop</code></td><td>阻止事件冒泡</td><td><code>&lt;button @click.stop=&quot;doSomething&quot;&gt;按钮&lt;/button&gt;</code></td></tr><tr><td><code>.prevent</code></td><td>阻止默认事件</td><td><code>&lt;form @submit.prevent=&quot;onSubmit&quot;&gt;</code></td></tr><tr><td><code>.capture</code></td><td>使用事件捕获模式</td><td><code>&lt;div @click.capture=&quot;onClick&quot;&gt;</code></td></tr><tr><td><code>.self</code></td><td>仅在自身触发时才执行回调</td><td><code>&lt;div @click.self=&quot;onSelfClick&quot;&gt;</code></td></tr><tr><td><code>.once</code></td><td>事件只触发一次</td><td><code>&lt;button @click.once=&quot;sayHi&quot;&gt;</code></td></tr><tr><td><code>.passive</code></td><td>提高滚动性能（表示不会调用 <code>preventDefault()</code>）</td><td><code>&lt;div @scroll.passive=&quot;onScroll&quot;&gt;</code></td></tr></tbody></table><p>💡 <strong>组合使用示例：</strong></p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">button</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> @</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">click</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">prevent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">submitForm</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">提交</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">button</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><hr><h2 id="三、按键修饰符-键盘事件" tabindex="-1">三、按键修饰符（键盘事件） <a class="header-anchor" href="#三、按键修饰符-键盘事件" aria-label="Permalink to &quot;三、按键修饰符（键盘事件）&quot;">​</a></h2><p>用于<strong>监听特定按键</strong>。</p><table tabindex="0"><thead><tr><th>修饰符</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>.enter</code></td><td>回车键</td><td><code>&lt;input @keyup.enter=&quot;submit&quot;&gt;</code></td></tr><tr><td><code>.esc</code></td><td>ESC 键</td><td><code>&lt;input @keyup.esc=&quot;clear&quot;&gt;</code></td></tr><tr><td><code>.tab</code></td><td>Tab 键</td><td><code>&lt;input @keydown.tab=&quot;switchFocus&quot;&gt;</code></td></tr><tr><td><code>.delete</code></td><td>Delete 或 Backspace</td><td><code>&lt;input @keyup.delete=&quot;remove&quot;&gt;</code></td></tr><tr><td><code>.space</code></td><td>空格键</td><td><code>&lt;input @keyup.space=&quot;toggle&quot;&gt;</code></td></tr><tr><td><code>.up</code> <code>.down</code> <code>.left</code> <code>.right</code></td><td>方向键</td><td><code>&lt;input @keyup.up=&quot;moveUp&quot;&gt;</code></td></tr></tbody></table><p>✨ 可以组合使用：</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">input</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> @</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">keyup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">enter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ctrl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">save</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><hr><h2 id="四、系统修饰键" tabindex="-1">四、系统修饰键 <a class="header-anchor" href="#四、系统修饰键" aria-label="Permalink to &quot;四、系统修饰键&quot;">​</a></h2><p>用于<strong>监听系统级组合键</strong>。</p><table tabindex="0"><thead><tr><th>修饰符</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td><code>.ctrl</code></td><td>Ctrl 键</td><td><code>&lt;input @keyup.ctrl.enter=&quot;save&quot;&gt;</code></td></tr><tr><td><code>.alt</code></td><td>Alt 键</td><td><code>&lt;button @click.alt=&quot;showHelp&quot;&gt;</code></td></tr><tr><td><code>.shift</code></td><td>Shift 键</td><td><code>&lt;div @click.shift=&quot;multiSelect&quot;&gt;</code></td></tr><tr><td><code>.meta</code></td><td>Mac 的 Command / Windows 的 Win 键</td><td><code>&lt;button @click.meta=&quot;openMenu&quot;&gt;</code></td></tr><tr><td><code>.exact</code></td><td>精确控制哪些修饰键被按下时才触发</td><td><code>&lt;button @click.ctrl.exact=&quot;onlyCtrl&quot;&gt;</code></td></tr></tbody></table><hr><h2 id="五、表单修饰符-v-model" tabindex="-1">五、表单修饰符（v-model） <a class="header-anchor" href="#五、表单修饰符-v-model" aria-label="Permalink to &quot;五、表单修饰符（v-model）&quot;">​</a></h2><p>用于控制数据绑定的行为。</p><table tabindex="0"><thead><tr><th>修饰符</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td><code>.lazy</code></td><td>在 <code>change</code> 事件触发时同步，而不是 <code>input</code></td><td><code>&lt;input v-model.lazy=&quot;msg&quot;&gt;</code></td></tr><tr><td><code>.number</code></td><td>将输入值自动转为数字类型</td><td><code>&lt;input v-model.number=&quot;age&quot;&gt;</code></td></tr><tr><td><code>.trim</code></td><td>自动去除首尾空格</td><td><code>&lt;input v-model.trim=&quot;username&quot;&gt;</code></td></tr></tbody></table><p>示例：</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">input</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> v-model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">trim</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">lazy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">price</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>等价于：在输入完成后更新数据 → 去掉空格 → 转成数字。</p><hr><h2 id="六、鼠标修饰符" tabindex="-1">六、鼠标修饰符 <a class="header-anchor" href="#六、鼠标修饰符" aria-label="Permalink to &quot;六、鼠标修饰符&quot;">​</a></h2><table tabindex="0"><thead><tr><th>修饰符</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>.left</code></td><td>只响应鼠标左键</td><td><code>&lt;button @click.left=&quot;onLeft&quot;&gt;</code></td></tr><tr><td><code>.right</code></td><td>只响应鼠标右键</td><td><code>&lt;button @click.right=&quot;onRight&quot;&gt;</code></td></tr><tr><td><code>.middle</code></td><td>只响应鼠标中键</td><td><code>&lt;button @click.middle=&quot;onMiddle&quot;&gt;</code></td></tr></tbody></table><hr><h2 id="七、vue-3-新特性-组件接收修饰符" tabindex="-1">七、Vue 3 新特性：组件接收修饰符 <a class="header-anchor" href="#七、vue-3-新特性-组件接收修饰符" aria-label="Permalink to &quot;七、Vue 3 新特性：组件接收修饰符&quot;">​</a></h2><p>在 Vue 3 中，修饰符可以传递到子组件：</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">MyInput</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> v-model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">trim</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">username</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>子组件内部：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">defineProps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  modelModifiers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Object</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>即可在逻辑中根据修饰符决定行为。</p><hr><h2 id="八、面试答题模板" tabindex="-1">八、面试答题模板 <a class="header-anchor" href="#八、面试答题模板" aria-label="Permalink to &quot;八、面试答题模板&quot;">​</a></h2><blockquote><p>Vue 的修饰符是用于改变指令默认行为的语法糖。常见的包括：</p><ul><li>事件修饰符：<code>.stop</code>、<code>.prevent</code>、<code>.once</code>、<code>.self</code>、<code>.passive</code>；</li><li>按键修饰符：<code>.enter</code>、<code>.esc</code> 等；</li><li>系统修饰符：<code>.ctrl</code>、<code>.shift</code>、<code>.meta</code>；</li><li>表单修饰符：<code>.lazy</code>、<code>.number</code>、<code>.trim</code>；</li><li>鼠标修饰符：<code>.left</code>、<code>.right</code>、<code>.middle</code>。<br> Vue 3 还支持自定义组件接收修饰符，让数据绑定更灵活。</li></ul></blockquote><hr><h2 id="九、总结表格" tabindex="-1">九、总结表格 <a class="header-anchor" href="#九、总结表格" aria-label="Permalink to &quot;九、总结表格&quot;">​</a></h2><table tabindex="0"><thead><tr><th>类型</th><th>修饰符</th><th>功能概述</th></tr></thead><tbody><tr><td>事件修饰符</td><td><code>.stop</code> <code>.prevent</code> <code>.once</code> <code>.self</code> <code>.capture</code> <code>.passive</code></td><td>控制事件触发行为</td></tr><tr><td>按键修饰符</td><td><code>.enter</code> <code>.esc</code> <code>.delete</code> <code>.space</code> <code>.up</code> <code>.down</code> 等</td><td>监听特定键盘按键</td></tr><tr><td>系统修饰符</td><td><code>.ctrl</code> <code>.alt</code> <code>.shift</code> <code>.meta</code> <code>.exact</code></td><td>监听组合键</td></tr><tr><td>表单修饰符</td><td><code>.lazy</code> <code>.number</code> <code>.trim</code></td><td>控制表单输入绑定方式</td></tr><tr><td>鼠标修饰符</td><td><code>.left</code> <code>.right</code> <code>.middle</code></td><td>限定鼠标按键</td></tr></tbody></table><hr><h2 id="🔗-参考链接" tabindex="-1">🔗 参考链接 <a class="header-anchor" href="#🔗-参考链接" aria-label="Permalink to &quot;🔗 参考链接&quot;">​</a></h2><ul><li>Vue 官方文档（事件修饰符）: <a href="https://cn.vuejs.org/guide/essentials/event-handling.html" target="_blank" rel="noreferrer">https://cn.vuejs.org/guide/essentials/event-handling.html</a></li><li>Vue 官方文档（表单输入绑定）: <a href="https://cn.vuejs.org/guide/essentials/forms.html" target="_blank" rel="noreferrer">https://cn.vuejs.org/guide/essentials/forms.html</a></li></ul>`,46)]))}const u=e(a,[["render",o]]);export{k as __pageData,u as default};
